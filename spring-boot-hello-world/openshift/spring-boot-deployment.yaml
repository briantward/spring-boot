apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spring-boot
    app.kubernetes.io/component: spring-boot
    app.kubernetes.io/instance: spring-boot
  name: spring-boot
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: spring-boot
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: spring-boot
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/test/spring-boot@sha256:146b9dd8f4fe82d4a41a6c5fddfa114ba331cc654017321ea1badf4ed37332fd
        imagePullPolicy: IfNotPresent
        name: spring-boot
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - --provider=openshift
        - --https-address=:9095
        - --http-address=
        - --upstream=http://localhost:8080
        - --openshift-sar={"resource":"namespaces","verb":"get"}
        - --openshift-delegate-urls={"/":{"resource":"namespaces","verb":"get"}}
        - --tls-cert=/etc/tls/private/tls.crt
        - --tls-key=/etc/tls/private/tls.key
        - --openshift-service-account=spring-boot
        - --cookie-secret-file=/etc/proxy/secrets/session_secret
        - --skip-provider-button=true
        - --openshift-ca=/etc/pki/tls/cert.pem
        - --openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        image: registry.redhat.io/openshift4/ose-oauth-proxy-rhel9@sha256:87c0888af352dde26cdf003c22fc675cf588b4cb34c1185fd9f010cb1c0362d1
        imagePullPolicy: IfNotPresent
        name: alertmanager-proxy
        ports:
        - containerPort: 9095
          name: oauth-proxy
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: 9095
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 1m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/tls/private
          name: tls-secret
          readOnly: true
        - mountPath: /etc/proxy/secrets
          name: spring-boot-proxy
      serviceAccount: spring-boot
      serviceAccountName: spring-boot
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: spring-boot-proxy
        secret:
          defaultMode: 420
          secretName: spring-boot-proxy
      - name: tls-secret
        secret:
          defaultMode: 420
          secretName: spring-boot-tls
